import pandas as pd
import matplotlib.pyplot as plt
import numpy as np    


# Les fichiers de données dans l'ordres demandés par le protocoles. Cela permet de simplement appeler files[4] par ex.
files = ['Labo1/Mesures/convertisseur_090925_01.lvm',               #0
         'Labo1/Mesures/convertisseur_débranché_090925_01.lvm',     #1    
         'Labo1/Mesures/convertisseur_débranché_090925_02.lvm',     #2
         'Labo1/Mesures/convertisseur_débranché_100925_01.lvm',     #3
         'Labo1/Mesures/tension_patate_aluinox_090925_01.lvm',      #4
         'Labo1/Mesures/tension_patate_aluinox_090925_02.lvm',      #5
         'Labo1/Mesures/tension_patate_aluacier_90925_01.lvm',      #6
         'Labo1/Mesures/tension_patate_aluacier_90925_02.lvm',      #7
         'Labo1/Mesures/tension_patate_aluacier_90925_03.lvm',      #8
         'Labo1/Mesures/voltage_pile_090925_01.lvm',                #9
         'Labo1/Mesures/voltage_pile_100925_01.lvm',                #10
         'Labo1/Mesures/voltage_circuit_090925_01.lvm',             #11
         'Labo1/Mesures/voltage_circuit_100925_01.lvm'              #12
         ]

filepath = files[0]

def read(file_name):
    df = pd.read_csv(file_name, sep="\t", skiprows=22, decimal=",")
    df = df.iloc[:, 1:].copy()

    col = 1 # On ne prend qu'une seule colonne si nous n'avons qu'une seule colonne de données.
    if df.shape[1] == 3:    # On prend 2 colonnes si on a deux colonnes de données (3 colonnes données par pandas).
        col = 2

    return df.to_numpy()[:, :col]


def moyenne(file_name):
    return np.average(read(file_name[0]))


def variance(file_name):
    return np.var(read(file_name[0]))


def bruit(file_name):
    return moyenne(file_name)**2/variance(file_name)


def incertitude(array, indice):
    col = array[:, indice]
    return 0.5 * (np.max(col) - np.min(col))


def graphiques_scatter(array):
    plt.clf()
    bruit = read(files[3])

    plt.plot(np.linspace(1, array.shape[0], array.shape[0]), array[:, 0], markersize=0.75, linestyle='none',
             marker='o')
    plt.plot(np.linspace(1, array.shape[0], array.shape[0]), bruit[:, 0], markersize=0.75, linestyle='none',
             marker='o')
    plt.errorbar(np.arange(1, array.shape[0] + 1), array[:, 0], yerr=incertitude(array, 0), fmt='none', elinewidth=0.6, capsize=1.5, alpha=0.6)
    plt.show()


graphiques_scatter(read(filepath))
